// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectTXServer.Data;

#nullable disable

namespace ProjectTXServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff",
                            RoleId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb4fd"
                        },
                        new
                        {
                            UserId = "DE544998-A3CC-4E12-ABB4-0642E57BD222",
                            RoleId = "360E601E-92F2-4F08-832B-604A21293258"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("ProjectTXServer.Entity.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductCover")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductIntro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductRate")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = "97cea438-1e6e-45f2-8ecd-158e9f951f5c",
                            ProductCover = "css/images/vangioitienlung.PNG",
                            ProductDescription = "This is Spider Man Product",
                            ProductIntro = "link clip",
                            ProductName = "Spider Man",
                            ProductRate = 1
                        },
                        new
                        {
                            ProductId = "1617bbdc-efe3-4c79-8a70-28ff4b434346",
                            ProductCover = "css/images/dauladailuc.PNG",
                            ProductDescription = "This is Mavel Product",
                            ProductIntro = "link clip",
                            ProductName = "Mavel",
                            ProductRate = 1
                        },
                        new
                        {
                            ProductId = "d492848b-c23c-4ab8-9195-2cd07970157d",
                            ProductCover = "css/images/Thegioihoanmy.PNG",
                            ProductDescription = "This is Tom And Jerry Product",
                            ProductIntro = "link clip",
                            ProductName = "Tom And Jerry",
                            ProductRate = 3
                        },
                        new
                        {
                            ProductId = "775bc0bb-178d-40d1-8d80-509871237ab4",
                            ProductCover = "css/images/yeuthanky.PNG",
                            ProductDescription = "This is Connan Product",
                            ProductIntro = "link clip",
                            ProductName = "Connan",
                            ProductRate = 3
                        },
                        new
                        {
                            ProductId = "66f3ce30-ae63-40d6-b156-c8c077016552",
                            ProductCover = "css/images/dauphathuongkhung.PNG",
                            ProductDescription = "This is Songoku1 Product",
                            ProductIntro = "link clip",
                            ProductName = "Sogoku1",
                            ProductRate = 5
                        },
                        new
                        {
                            ProductId = "1169072a-954e-4e9c-a266-b55b62993194",
                            ProductCover = "css/images/vothanchuate.PNG",
                            ProductDescription = "This is naruto1 Product",
                            ProductIntro = "link clip",
                            ProductName = "Naruto1",
                            ProductRate = 5
                        },
                        new
                        {
                            ProductId = "014479ad-ed74-4eda-8050-5e747072c9ae",
                            ProductCover = "css/images/movie15.jpg",
                            ProductDescription = "This is YourName Product",
                            ProductIntro = "link clip",
                            ProductName = "YourName",
                            ProductRate = 5
                        },
                        new
                        {
                            ProductId = "b93bbc67-d8eb-4663-bd42-e684e68a616a",
                            ProductCover = "css/images/movie14.jpg",
                            ProductDescription = "This is Kamen Rider Product",
                            ProductIntro = "link clip",
                            ProductName = "Kamen Rider",
                            ProductRate = 5
                        },
                        new
                        {
                            ProductId = "16156fcc-ed78-40c3-b83b-589f14e26ede",
                            ProductCover = "css/images/movie13.jpg",
                            ProductDescription = "This is Naruto2 Product",
                            ProductIntro = "link clip",
                            ProductName = "Naruto2",
                            ProductRate = 5
                        },
                        new
                        {
                            ProductId = "2891735f-2709-4607-bd72-0cb9c5f3a7e7",
                            ProductCover = "css/images/movie12.jpg",
                            ProductDescription = "This is Songoku2 Product",
                            ProductIntro = "link clip",
                            ProductName = "Songoku2",
                            ProductRate = 5
                        },
                        new
                        {
                            ProductId = "e9583c8a-bd6f-4a70-8264-a117b42029f0",
                            ProductCover = "css/images/movie11.jpg",
                            ProductDescription = "This is Songoku2 Product",
                            ProductIntro = "link clip",
                            ProductName = "Songoku2",
                            ProductRate = 5
                        },
                        new
                        {
                            ProductId = "6101c876-00a5-4d1f-9c1f-71673f5e1874",
                            ProductCover = "css/images/movie10.jpg",
                            ProductDescription = "This is Đấu La Đại Lục Product",
                            ProductIntro = "link clip",
                            ProductName = "Đấu La Đại Lục",
                            ProductRate = 5
                        },
                        new
                        {
                            ProductId = "fcc88cb5-c35d-4f37-aa64-29b59a685569",
                            ProductCover = "css/images/movie9.jpg",
                            ProductDescription = "This is Yêu Thần Ký Product",
                            ProductIntro = "link clip",
                            ProductName = "Yêu Thần Ký",
                            ProductRate = 5
                        },
                        new
                        {
                            ProductId = "a9bd868f-199b-49bf-8af8-7ac43a91cd32",
                            ProductCover = "css/images/movie8.jpg",
                            ProductDescription = "This is Vạn Giới Thần Chủ Product",
                            ProductIntro = "link clip",
                            ProductName = "Vạn Giới Thần Chủ",
                            ProductRate = 5
                        },
                        new
                        {
                            ProductId = "14c978ce-f118-45f1-afd3-2459375ba6ab",
                            ProductCover = "css/images/movie7.jpg",
                            ProductDescription = "This is Võ Thần Chúa Tể Product",
                            ProductIntro = "link clip",
                            ProductName = "Võ Thần Chúa Tể",
                            ProductRate = 5
                        },
                        new
                        {
                            ProductId = "e5e2300e-4ee6-4a3c-b9e8-b8cb9b7dc539",
                            ProductCover = "css/images/movie6.jpg",
                            ProductDescription = "This is Vạn Giới Tiên Lung Product",
                            ProductIntro = "link clip",
                            ProductName = "Vạn Giới Tiên Lung",
                            ProductRate = 5
                        },
                        new
                        {
                            ProductId = "6b0e5969-fdf9-4a05-8ae9-4e189144dadb",
                            ProductCover = "css/images/movie5.jpg",
                            ProductDescription = "This is Tru Tiên Product",
                            ProductIntro = "link clip",
                            ProductName = "Tru Tiên",
                            ProductRate = 5
                        },
                        new
                        {
                            ProductId = "67874a01-69cc-490a-81bc-c53678e332f3",
                            ProductCover = "css/images/movie4.jpg",
                            ProductDescription = "This is Nghịch Thiên Chí Tôn Product",
                            ProductIntro = "link clip",
                            ProductName = "Nghịch Thiên Chí Tôn",
                            ProductRate = 5
                        },
                        new
                        {
                            ProductId = "124d8f9b-dffe-4da2-9664-bb0a7d83f81d",
                            ProductCover = "css/images/movie3.jpg",
                            ProductDescription = "This is Thế Giới Hoàn Mỹ Product",
                            ProductIntro = "link clip",
                            ProductName = "Thế Giới Hoàn Mỹ",
                            ProductRate = 5
                        },
                        new
                        {
                            ProductId = "dc6b035f-2395-4ef0-aa1a-41a79351bf92",
                            ProductCover = "css/images/movie2.jpg",
                            ProductDescription = "This is Đấu Phá Thương Khung Product",
                            ProductIntro = "link clip",
                            ProductName = "Đấu Phá Thương Khung",
                            ProductRate = 5
                        });
                });

            modelBuilder.Entity("ProjectTXServer.Entity.ProductInProductType", b =>
                {
                    b.Property<string>("ProductTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductTypeId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductInProductType", (string)null);

                    b.HasData(
                        new
                        {
                            ProductTypeId = "a63b56d5-a452-479b-bc1f-3491a457843b",
                            ProductId = "014479ad-ed74-4eda-8050-5e747072c9ae"
                        },
                        new
                        {
                            ProductTypeId = "a63b56d5-a452-479b-bc1f-3491a457843b",
                            ProductId = "b93bbc67-d8eb-4663-bd42-e684e68a616a"
                        },
                        new
                        {
                            ProductTypeId = "a63b56d5-a452-479b-bc1f-3491a457843b",
                            ProductId = "2891735f-2709-4607-bd72-0cb9c5f3a7e7"
                        },
                        new
                        {
                            ProductTypeId = "a63b56d5-a452-479b-bc1f-3491a457843b",
                            ProductId = "e9583c8a-bd6f-4a70-8264-a117b42029f0"
                        },
                        new
                        {
                            ProductTypeId = "a63b56d5-a452-479b-bc1f-3491a457843b",
                            ProductId = "6101c876-00a5-4d1f-9c1f-71673f5e1874"
                        },
                        new
                        {
                            ProductTypeId = "a63b56d5-a452-479b-bc1f-3491a457843b",
                            ProductId = "fcc88cb5-c35d-4f37-aa64-29b59a685569"
                        },
                        new
                        {
                            ProductTypeId = "a63b56d5-a452-479b-bc1f-3491a457843b",
                            ProductId = "a9bd868f-199b-49bf-8af8-7ac43a91cd32"
                        },
                        new
                        {
                            ProductTypeId = "a63b56d5-a452-479b-bc1f-3491a457843b",
                            ProductId = "e5e2300e-4ee6-4a3c-b9e8-b8cb9b7dc539"
                        },
                        new
                        {
                            ProductTypeId = "ca15d04c-3f00-49ae-a52b-36b744975b5f",
                            ProductId = "97cea438-1e6e-45f2-8ecd-158e9f951f5c"
                        },
                        new
                        {
                            ProductTypeId = "ca15d04c-3f00-49ae-a52b-36b744975b5f",
                            ProductId = "775bc0bb-178d-40d1-8d80-509871237ab4"
                        },
                        new
                        {
                            ProductTypeId = "ca15d04c-3f00-49ae-a52b-36b744975b5f",
                            ProductId = "66f3ce30-ae63-40d6-b156-c8c077016552"
                        },
                        new
                        {
                            ProductTypeId = "ca15d04c-3f00-49ae-a52b-36b744975b5f",
                            ProductId = "1169072a-954e-4e9c-a266-b55b62993194"
                        },
                        new
                        {
                            ProductTypeId = "ca15d04c-3f00-49ae-a52b-36b744975b5f",
                            ProductId = "124d8f9b-dffe-4da2-9664-bb0a7d83f81d"
                        });
                });

            modelBuilder.Entity("ProjectTXServer.Entity.ProductType", b =>
                {
                    b.Property<string>("ProductTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductTypeId");

                    b.ToTable("ProductType", (string)null);

                    b.HasData(
                        new
                        {
                            ProductTypeId = "a63b56d5-a452-479b-bc1f-3491a457843b",
                            ProductTypeName = "Romantic"
                        },
                        new
                        {
                            ProductTypeId = "ca15d04c-3f00-49ae-a52b-36b744975b5f",
                            ProductTypeName = "Action"
                        });
                });

            modelBuilder.Entity("ProjectTXServer.Entity.AppRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AppRole");

                    b.HasData(
                        new
                        {
                            Id = "f49e4348-718f-43e3-b1f6-6dc89c5Bb4fd",
                            ConcurrencyStamp = "a6ce7349-1579-4eed-8059-bca10bed8608",
                            Name = "Staff",
                            NormalizedName = "staff",
                            Description = "Staff"
                        },
                        new
                        {
                            Id = "360E601E-92F2-4F08-832B-604A21293258",
                            ConcurrencyStamp = "60dbae58-6973-4c69-8f94-c3607a7f11ea",
                            Name = "Admin",
                            NormalizedName = "admin",
                            Description = "Admin"
                        });
                });

            modelBuilder.Entity("ProjectTXServer.Entity.AppUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<DateTime>("UserDoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AppUser");

                    b.HasData(
                        new
                        {
                            Id = "DE544998-A3CC-4E12-ABB4-0642E57BD222",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b36d4d58-0716-4433-b2cd-682a11e4bdda",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEPynoeqepuO0seiT3OzW7eIxD4ViSq3hfnoyDSx5KWF0sGq7gLfJAST9mJmCq2iAUg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a7036b45-5297-428a-9ea8-ad364a99c859",
                            TwoFactorEnabled = false,
                            UserName = "Admin",
                            UserDoB = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserFirstName = "admin first name",
                            UserLastName = "admin last name",
                            UserPhoneNumber = "08658568790"
                        },
                        new
                        {
                            Id = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "079d0cc4-87b7-4532-9147-32476bded111",
                            Email = "staff@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "STAFF@GMAIL.COM",
                            NormalizedUserName = "STAFF@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHkspTmHWtl/E74vI+AcmOG7Pp/dHSxQWP+CzkM/FTFu0zS8nrM1UwJFGAG75g8FUQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3e417764-9aa6-4d8e-a86f-68a4daed76ef",
                            TwoFactorEnabled = false,
                            UserName = "Staff",
                            UserDoB = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserFirstName = "staff first name",
                            UserLastName = "staff last name",
                            UserPhoneNumber = "08658568790"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectTXServer.Entity.ProductInProductType", b =>
                {
                    b.HasOne("ProjectTXServer.Entity.Product", "ProductObj")
                        .WithMany("ListProduct")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectTXServer.Entity.ProductType", "ProductTypeObj")
                        .WithMany("ListType")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductObj");

                    b.Navigation("ProductTypeObj");
                });

            modelBuilder.Entity("ProjectTXServer.Entity.Product", b =>
                {
                    b.Navigation("ListProduct");
                });

            modelBuilder.Entity("ProjectTXServer.Entity.ProductType", b =>
                {
                    b.Navigation("ListType");
                });
#pragma warning restore 612, 618
        }
    }
}
